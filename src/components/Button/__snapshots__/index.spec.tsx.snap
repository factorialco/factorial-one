// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Snapshot - critical variant 1`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-secondary border border-f1-border h-8 rounded gap-1 px-2 sm:px-3 lg:px-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      className="text-base font-medium text-f1-foreground-critical"
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`Button Snapshot - default button 1`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-accent-bold h-8 rounded gap-1 px-2 sm:px-3 lg:px-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      className="text-base font-medium text-f1-foreground-inverse"
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`Button Snapshot - different sizes 1`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-accent-bold h-6 rounded-sm gap-1 px-2 sm:px-3 lg:px-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      className="text-base font-medium text-f1-foreground-inverse"
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`Button Snapshot - different sizes 2`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-accent-bold h-8 rounded gap-1 px-2 sm:px-3 lg:px-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      className="text-base font-medium text-f1-foreground-inverse"
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`Button Snapshot - different sizes 3`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-accent-bold h-10 rounded-md gap-1 px-2 sm:px-3 lg:px-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      className="text-base font-medium text-f1-foreground-inverse"
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`Button Snapshot - disabled state 1`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button, disabled"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-accent-bold h-8 rounded opacity-50 gap-1 px-2 sm:px-3 lg:px-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      className="text-base font-medium text-f1-foreground-inverse"
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`Button Snapshot - loading state 1`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button, disabled, loading"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": true,
        "checked": undefined,
        "disabled": true,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-accent-bold h-8 rounded opacity-50 gap-1 px-2 sm:px-3 lg:px-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      className="text-base font-medium text-f1-foreground-inverse"
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`Button Snapshot - outline variant 1`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-inverse-secondary border border-f1-border h-8 rounded gap-1 px-2 sm:px-3 lg:px-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      className="text-base font-medium text-f1-foreground"
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`Button Snapshot - round button with hidden label 1`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-accent-bold h-8 rounded aspect-square p-0"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  />
</View>
`;

exports[`Button Snapshot - with emoji 1`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-accent-bold h-8 rounded gap-1 px-2 sm:px-3 lg:px-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      className="text-base font-medium text-f1-foreground-inverse"
    >
      👋
    </Text>
    <Text
      className="text-base font-medium text-f1-foreground-inverse"
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`Button Snapshot - with icon 1`] = `
<View
  className="flex item-start"
>
  <View
    accessibilityLabel="Test Button"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": false,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    className="flex-row items-center justify-center border-none grow-0 bg-f1-background-accent-bold h-8 rounded gap-1 px-2 sm:px-3 lg:px-4"
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      className="text-base font-medium text-f1-foreground-inverse"
    >
      Test Button
    </Text>
  </View>
</View>
`;
